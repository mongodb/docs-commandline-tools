.. _mongotop:

.. default-domain:: mongodb

.. binary:: mongotop

.. program:: mongotop

============
``mongotop``
============

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. |arrow| unicode:: U+27A4
.. |tool-binary| replace:: :binary:`~bin.mongotop`
.. |mongodb-aws-example| replace:: :ref:`mongotop-example-connect-using-aws-iam`

Description
-----------

:binary:`~bin.mongotop` provides a method to track the amount of time a
MongoDB instance :binary:`~bin.mongod` spends reading and writing data.
:binary:`~bin.mongotop` provides statistics on a per-collection level.
By default, :binary:`~bin.mongotop` returns values every second.

.. include:: /includes/extracts/require-cmd-line-mongotop.rst

Versioning
~~~~~~~~~~

.. include:: /includes/extracts/dbtools-version-single.rst

.. note:: Quick links to older documentation

   - `MongoDB 4.2 mongotop <https://docs.mongodb.com/v4.2/reference/program/mongotop>`__
   - `MongoDB 4.0 mongotop <https://docs.mongodb.com/v4.0/reference/program/mongotop>`__
   - `MongoDB 3.6 mongotop <https://docs.mongodb.com/v3.6/reference/program/mongotop>`__

This documentation is for version ``{+release+}`` of |tool-binary|. 

Compatibility
-------------

MongoDB Server Compatibility
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/dbtools-compatibility-single.rst

Platform Support
~~~~~~~~~~~~~~~~

|tool-binary| version ``{+release+}`` is supported on the following
platforms:

.. include:: /includes/fact-platform-support.rst

Installation
------------

.. include:: /includes/fact-see-install-guide.rst

Syntax
-------

The :binary:`~bin.mongotop` command has the following form:

.. code-block:: sh

   mongotop <options> <connection-string> <polling interval in seconds>

.. include:: /includes/extracts/require-cmd-line-mongotop.rst

Running :binary:`~bin.mongotop` without any command-line options will
connect to the :binary:`~bin.mongod` instance running on localhost over
port ``27017``, and will return values every second by default.

.. code-block:: sh

   mongotop

To have :binary:`~bin.mongotop` report every 30 seconds, specify the
polling interval:

.. code-block:: sh

   mongotop 30

When connected to a :binary:`~bin.mongod` instance, the program reports
first on the connection and then reports on the statistics at the
configured frequency.

.. code-block:: sh

   2019-04-29T15:35:27.785-0400	connected to: 127.0.0.1

                ns    total      read      write    <timestamp>
   <db.collection>    81802ms     0ms    81802ms   
   ...

Command Line Options
~~~~~~~~~~~~~~~~~~~~

.. code-block:: sh

   mongotop [options] [frequency]

You can run :binary:`~bin.mongotop` with various :ref:`command-line
options <mongotop-options>`.
  
For example, to connect :binary:`~bin.mongotop` to a
:binary:`~bin.mongod` instance running on a remote host
``mongodb0.example.com`` and report every 30 seconds:

- You can include the desired frequency of reporting (in this
  example, 30 seconds) and the :option:`--uri <mongotop --uri>`
  option to specify the host and port:

  .. code-block:: sh

     mongotop 30 --uri='mongodb://mongodb0.example.com:27017' [additional options]

  If the :binary:`~bin.mongod` instance requires authentication, you
  can specify the user, password, and authentication database as part
  of the URI connection string:

  .. code-block:: sh

     mongotop 30 --uri='mongodb://user:password@mongodb0.example.com:27017/?authSource=admin' [additional options]

  The user running :binary:`~bin.mongotop` must have the
  :authaction:`serverStatus` and :authaction:`top` privileges.

  For more information on the URI connection string, see
  :option:`--uri <mongotop --uri>`.

- Alternatively, you can use the :option:`--host <mongotop --host>`
  and :option:`--port <mongotop --port>` options to specify the host
  and port:

  .. code-block:: sh

     mongotop 30 --host=mongodb0.example.com --port=27017 [additional options]

  If the :binary:`~bin.mongod` instance requires authentication, you
  can specify the user :option:`-u <mongotop -u>`, and the
  authentication database :option:`--authenticationDatabase <mongotop
  --authenticationDatabase>`. Omit the :option:`--password <mongotop
  --password>` option to have :binary:`~bin.mongoexport` prompt for the
  password.

  .. code-block:: sh

     mongotop 30 --host=mongodb0.example.com --port=27017 -u=user --authenticationDatabase=admin [additional options]

  The user running :binary:`~bin.mongotop` must have the
  :authaction:`serverStatus` and :authaction:`top` privileges.

For more information on the options available, see
:ref:`mongotop-options`.

When connected to a :binary:`~bin.mongod` instance, the program reports
first on the connection and then reports on the statistics at the
configured frequency.

.. code-block:: sh

   2019-04-29T15:35:27.785-0400	connected to: 127.0.0.1

                ns    total      read      write    <timestamp>
   <db.collection>    81802ms     0ms    81802ms   
   ...

Required Access
---------------

In order to connect to a :binary:`~bin.mongod` that enforces
authorization, the connecting user must have the
:authaction:`serverStatus` and :authaction:`top` privileges.

The built-in role :authrole:`clusterMonitor` provides these privileges.

Behavior
--------

Polling
~~~~~~~

The :program:`mongotop` program uses the :manual:`top</reference/command/top>`
command to collect data. However, while :program:`top` returns cumulative
usage statistics, :program:`mongotop` resets the usage statistics for 
each polling interval.

FIPS
~~~~

:binary:`~bin.mongotop` automatically creates FIPS-compliant
connections to a :binary:`~bin.mongod`/:binary:`~bin.mongos` that is
:manual:`configured to use FIPS mode </tutorial/configure-fips>`.

.. _mongotop-options:

Options
-------

.. option:: --help

   Returns information on the options and use of :program:`mongotop`.


.. option:: --verbose, -v

   Increases the amount of internal reporting returned on standard output
   or in log files. Increase the verbosity with the ``-v`` form by
   including the option multiple times, (e.g. ``-vvvvv``.)
   


.. option:: --quiet

   Runs :program:`mongotop` in a quiet mode that attempts to limit the amount
   of output.

   This option suppresses:
   
   - output from :term:`database commands <database command>`
   
   - replication activity
   
   - connection accepted events
   
   - connection closed events


.. option:: --version

   Returns the :program:`mongotop` release number.


.. option:: --uri=<connectionString>

   Specifies the resolvable :manual:`URI connection string
   </reference/connection-string/>` of the MongoDB deployment, enclosed
   in quotes:
   
   .. code-block:: none
   
      --uri="mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]"
   
   .. include:: /includes/extracts/uri-positional-mongotop.rst

   For information on the components of the connection string, see
   the :manual:`Connection String URI Format
   </reference/connection-string/>` documentation. 

   .. include:: /includes/fact-uri-with-conflicting-info.rst


.. option:: --host=<hostname><:port>, -h=<hostname><:port>

   *Default*: localhost:27017

   Specifies the resolvable hostname of the MongoDB deployment. By
   default, :program:`mongotop` attempts to connect to a MongoDB
   instance running on the localhost on port number ``27017``.
   
   To connect to a replica set, specify the
   :setting:`~replication.replSetName` and a seed list of set members, as in
   the following:
   
   .. code-block:: none
   
      --host=<replSetName>/<hostname1><:port>,<hostname2><:port>,<...>
   
   When specifying the replica set list format, :program:`mongotop` always connects to
   the :term:`primary <Primary>`. 
   
   You can also connect to any single member of the replica set by specifying
   the host and port of only that member:
   
   .. code-block:: none
   
      --host=<hostname1><:port>

   If you use IPv6 and use the ``<address>:<port>`` format, you must
   enclose the portion of an address and port combination in
   brackets (e.g. ``[<address>]``).

   .. include:: /includes/extracts/uri-used-with-host.rst

   If connected to a replica set where the :term:`primary` is not
   reachable, :program:`mongotop` returns an error message.


.. option:: --port=<port>

   *Default*: 27017

   Specifies the TCP port on which the MongoDB instance listens for
   client connections.
   
   .. include:: /includes/extracts/uri-used-with-port.rst



.. option:: --ssl

   Enables connection to a :binary:`~bin.mongod` or :binary:`~bin.mongos` that has
   TLS/SSL support enabled.
   
   .. include:: /includes/extracts/uri-used-with-ssl.rst

   .. include:: /includes/extracts/ssl-facts-see-more.rst
   


.. option:: --sslCAFile=<filename>

   Specifies the :file:`.pem` file that contains the root certificate chain
   from the Certificate Authority. Specify the file name of the
   :file:`.pem` file using relative or absolute paths.
   
   .. include:: /includes/extracts/uri-used-with-sslcafile.rst

   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslPEMKeyFile=<filename>

   Specifies the :file:`.pem` file that contains both the TLS/SSL certificate
   and key. Specify the file name of the :file:`.pem` file using relative
   or absolute paths.
   
   This option is required when using the :option:`--ssl` option to connect
   to a :binary:`~bin.mongod` or :binary:`~bin.mongos` that has
   :setting:`~net.ssl.CAFile` enabled *without*
   :setting:`~net.ssl.allowConnectionsWithoutCertificates`.
   
   .. include:: /includes/extracts/uri-used-with-sslpemkeyfile.rst

   .. include:: /includes/extracts/ssl-facts-see-more.rst
   


.. option:: --sslPEMKeyPassword=<value>

   Specifies the password to de-crypt the certificate-key file (i.e.
   :option:`--sslPEMKeyFile`). Use the :option:`--sslPEMKeyPassword` option only if the
   certificate-key file is encrypted. In all cases, the :program:`mongotop` will
   redact the password from all logging and reporting output.
   
   If the private key in the PEM file is encrypted and you do not specify
   the :option:`--sslPEMKeyPassword` option, the :program:`mongotop` will prompt for a passphrase. See
   :ref:`ssl-certificate-password`.
   
   .. include:: /includes/extracts/uri-used-with-sslpemkeypassword.rst

   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslCRLFile=<filename>

   Specifies the :file:`.pem` file that contains the Certificate Revocation
   List. Specify the file name of the :file:`.pem` file using relative or
   absolute paths.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst
   


.. option:: --sslAllowInvalidCertificates

   Bypasses the validation checks for server certificates and allows
   the use of invalid certificates. When using the
   :setting:`~net.ssl.allowInvalidCertificates` setting, MongoDB logs as a
   warning the use of the invalid certificate.
   
   .. include:: /includes/extracts/ssl-facts-invalid-cert-warning-clients.rst
   
   .. include:: /includes/extracts/uri-used-with-sslallowinvalidcertificates.rst

   .. include:: /includes/extracts/ssl-facts-see-more.rst
   


.. option:: --sslAllowInvalidHostnames

   Disables the validation of the hostnames in TLS/SSL certificates. Allows
   :program:`mongotop` to connect to MongoDB instances even if the hostname in their
   certificates do not match the specified hostname.
   
   .. include:: /includes/extracts/uri-used-with-sslallowinvalidhostnames.rst
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --username=<username>, -u=<username>

   Specifies a username with which to authenticate to a MongoDB database
   that uses authentication. Use in conjunction with the :option:`--password <mongotop --password>` and
   :option:`--authenticationDatabase <mongotop --authenticationDatabase>` options.

   .. include:: /includes/extracts/uri-used-with-username.rst

   .. include:: /includes/extracts/mongodb-aws-username-mongotop.rst


.. option:: --password=<password>, -p=<password>

   Specifies a password with which to authenticate to a MongoDB database
   that uses authentication. Use in conjunction with the :option:`--username <mongotop --username>` and
   :option:`--authenticationDatabase <mongotop --authenticationDatabase>` options.

   To prompt the user for the password, pass the :option:`--username <mongotop --username>`
   option without :option:`--password <mongotop --password>` or specify an empty string as the
   :option:`--password <mongotop --password>` value, as in ``--password ""`` .

   .. include:: /includes/extracts/uri-used-with-password.rst

   .. include:: /includes/extracts/mongodb-aws-password-mongotop.rst


.. option:: --awsSessionToken=<AWS Session Token>

   .. include:: /includes/extracts/mongodb-aws-session-token-mongotop.rst


.. option:: --authenticationDatabase=<dbname>

   Specifies the authentication database where the specified
   :option:`--username <mongotop --username>` has been created.
   :option:`--authenticationDatabase <mongotop --authenticationDatabase>` is required for
   :binary:`~bin.mongod` and :binary:`~bin.mongos` instances that use
   :ref:`authentication`. See :ref:`user-authentication-database`.

   .. include:: /includes/fact-auth-database-use-external.rst

   .. include:: /includes/extracts/uri-used-with-authenticationdatabase.rst


.. option:: --authenticationMechanism=<name>

   *Default*: SCRAM-SHA-1

   Specifies the authentication mechanism the :program:`mongotop` instance uses to
   authenticate to the :binary:`~bin.mongod` or :binary:`~bin.mongos`.

   .. versionchanged:: 100.1.0
   
      Starting in version ``100.1.0``, :program:`mongotop` adds support for
      the ``MONGODB-AWS`` authentication mechanism when connecting to a
      `MongoDB Atlas
      <https://www.mongodb.com/cloud/atlas?tck=docs_server>`__ cluster.

   .. include:: /includes/list-table-auth-mechanisms.rst
   
   .. include:: /includes/extracts/uri-used-with-authenticationmechanism.rst


.. option:: --gssapiServiceName=<serviceName>

   Specify the name of the service using :manual:`GSSAPI/Kerberos
   </core/kerberos>`. Only required if the service does not use the
   default name of ``mongodb``.
   
   This option is available only in MongoDB Enterprise.
   


.. option:: --gssapiHostName=<hostname>

   Specify the hostname of a service using :manual:`GSSAPI/Kerberos
   </core/kerberos>`. *Only* required if the hostname of a machine does
   not match the hostname resolved by DNS.
   
   This option is available only in MongoDB Enterprise.
   


.. option:: --locks

   Toggles the mode of :binary:`~bin.mongotop` to report on use of per-database
   :ref:`locks <locks>`. This data is only available when connected to a
   MongoDB 2.6 or older instance.
   

   :option:`--locks` returns an error when called against a :binary:`~bin.mongod` 3.0 or
   newer instance that does not report per-database lock usage.


.. option:: --rowcount=<int>, -n=<int>

   Number of lines of data that :program:`mongotop` should print. "0 for indefinite"


.. option:: --json

   Returns output for :program:`mongotop` in :term:`JSON` format. In
   addition to timing data, the ``--json`` option also returns a count
   of the number of operations which took place during the polling
   interval. 


.. option:: <sleeptime>

   The final argument is the length of time, in seconds, that
   :program:`mongotop` waits in between calls. By default :program:`mongotop` returns
   data every second.


.. _mongotop-fields:

Fields
------

When connected to a :binary:`~bin.mongod` instance, the program reports
first on the connection and then reports on the statistics at the
configured frequency. :binary:`~bin.mongotop` returns time values
specified in milliseconds (ms.)

.. code-block:: sh

   2019-04-29T15:35:27.785-0400	connected to: 127.0.0.1

                ns    total      read      write    <timestamp>
   <db.collection>    81802ms     0ms    81802ms   
   ...

                ns    total      read      write    <timestamp>
   <db.collection>    0ms         0ms        0ms
   ...

:binary:`~bin.mongotop` only reports active namespaces or databases,
depending on the :option:`--locks <mongotop --locks>` option. If you don't see a database
or collection, it has received no recent activity. You can issue a
simple operation in the :binary:`~bin.mongo` shell to generate activity to
affect the output of :binary:`~bin.mongotop`.

.. data:: mongotop.ns

   Contains the database namespace, which combines the database name
   and collection.

   If you use the :option:`mongotop --locks`, the :data:`~mongotop.ns`
   field does not appear in the :binary:`~bin.mongotop` output.

.. data:: mongotop.db

   Contains the name of the database. The database named ``.`` refers
   to the global lock, rather than a specific database.

   This field does not appear unless you have invoked
   :binary:`~bin.mongotop` with the :option:`--locks <mongotop --locks>` option.

.. data:: mongotop.total

   Provides the total amount of time that this :binary:`~bin.mongod` spent
   operating on this namespace.

.. data:: mongotop.read

   Provides the amount of time that this :binary:`~bin.mongod` spent
   performing read operations on this namespace.

.. data:: mongotop.write

   Provides the amount of time that this :binary:`~bin.mongod` spent
   performing write operations on this namespace.

.. data:: mongotop.<timestamp>

   Provides a time stamp for the returned data.

.. _mongotop-use:

Examples
--------

.. include:: /includes/extracts/require-cmd-line-mongotop.rst

By default :binary:`~bin.mongotop` connects to the MongoDB instance
running on the localhost port ``27017``. However, :binary:`~bin.mongotop` can optionally
connect to remote :binary:`~bin.mongod`
instances. See the :ref:`mongotop options <mongotop-options>` for more
information.

To force :binary:`~bin.mongotop` to return less frequently specify a number, in
seconds at the end of the command. In this example, :binary:`~bin.mongotop` will
return every 15 seconds.

.. code-block:: sh

   mongotop 15

This command produces the following output:

.. code-block:: sh

   2019-04-29T15:35:27.785-0400	connected to: 127.0.0.1


                       ns    total    read    write    2019-04-29T15:35:57-04:00
       admin.system.roles      0ms     0ms      0ms                             
       admin.system.users      0ms     0ms      0ms                             
     admin.system.version      0ms     0ms      0ms                             
   config.system.sessions      0ms     0ms      0ms                             
        local.startup_log      0ms     0ms      0ms                             
     local.system.replset      0ms     0ms      0ms

To return a :binary:`~bin.mongotop` report every 5 minutes, use the
following command:

.. code-block:: sh

   mongotop 300

.. _mongotop-example-connect-using-aws-iam:

Connect to a MongoDB Atlas Cluster using AWS IAM Credentials
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. versionadded:: 100.1.0

To connect to a `MongoDB Atlas
<https://www.mongodb.com/cloud/atlas?tck=docs_server>`__ cluster which
has been configured to support authentication via `AWS IAM credentials
<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html>`__,
provide a :option:`connection string <mongotop --uri>` to
|tool-binary| similar to the following:

.. code-block:: none

   mongotop 'mongodb+srv://<aws access key id>:<aws secret access key>@cluster0.example.com/testdb?authSource=$external&authMechanism=MONGODB-AWS' <other options>

Connecting to Atlas using AWS IAM credentials in this manner uses the
``MONGODB-AWS`` :urioption:`authentication mechanism <authMechanism>`
and the ``$external`` :urioption:`authSource`, as shown in this example.

If using an `AWS session token
<https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html>`__,
as well, provide it with the ``AWS_SESSION_TOKEN``
:urioption:`authMechanismProperties` value, as follows:

.. code-block:: none

   mongotop 'mongodb+srv://<aws access key id>:<aws secret access key>@cluster0.example.com/testdb?authSource=$external&authMechanism=MONGODB-AWS&authMechanismProperties=AWS_SESSION_TOKEN:<aws session token>' <other options>

.. include:: /includes/fact-pct-encode-uri.rst

Alternatively, the AWS access key ID, secret access key, and optionally
session token can each be provided outside of the connection string
using the :option:`--username <mongotop --username>`, :option:`--password <mongotop --password>`, and
:option:`--awsSessionToken` options instead, like so:

.. code-block:: none

   mongotop 'mongodb+srv://cluster0.example.com/testdb?authSource=$external&authMechanism=MONGODB-AWS' --username <aws access key id> --password <aws secret access key> --awsSessionToken <aws session token> <other options>

When provided as command line parameters, these three options do not
require percent encoding.

You may also set these credentials on your platform using standard
`AWS IAM environment variables
<https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html#envvars-list>`__.
|tool-binary| checks for the following environment variables when you
use the ``MONGODB-AWS``
:urioption:`authentication mechanism <authMechanism>`:

- ``AWS_ACCESS_KEY_ID``
- ``AWS_SECRET_ACCESS_KEY``
- ``AWS_SESSION_TOKEN``

If set, these credentials do not need to be specified in the connection
string or via their explicit options.

.. note::

   If you chose to use the AWS environment variables to specify these
   values, you cannot mix and match with the corresponding explicit or 
   connection string options for these credentials. Either use the
   environment variables for access key ID *and* secret access key
   (*and* session token if used), **or** specify each of these using the
   explicit or connection string options instead.

The following example sets these environment variables in the ``bash``
shell:

.. code-block:: none

   export AWS_ACCESS_KEY_ID='<aws access key id>'
   export AWS_SECRET_ACCESS_KEY='<aws secret access key>'
   export AWS_SESSION_TOKEN='<aws session token>'

Syntax for setting environment variables in other shells will be
different. Consult the documentation for your platform for more
information.

You can verify that these environment variables have been set with the
following command:

.. code-block:: none

   env | grep AWS

Once set, the following example connects to a MongoDB Atlas cluster
using these environment variables:

.. code-block:: none

   mongotop 'mongodb+srv://cluster0.example.com/testdb?authSource=$external&authMechanism=MONGODB-AWS'  <other options>

Additional Information
----------------------

For more information about monitoring MongoDB, see
:manual:`Monitoring for MongoDB</administration/monitoring>`.

For additional background on various other MongoDB status outputs see:

- :manual:`serverStatus</reference/command/serverStatus>`
- :manual:`replSetGetStatus</reference/command/replSetGetStatus>`
- :manual:`dbStats</reference/command/dbStats>`
- :manual:`collStats</reference/command/collStats>`

For an additional utility that provides MongoDB metrics
see :doc:`/mongostat`.

